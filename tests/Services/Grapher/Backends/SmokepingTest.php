<?php

/*
 * Copyright (C) 2009 - 2019 Internet Neutral Exchange Association Company Limited By Guarantee.
 * All Rights Reserved.
 *
 * This file is part of IXP Manager.
 *
 * IXP Manager is free software: you can redistribute it and/or modify it
 * under the terms of the GNU General Public License as published by the Free
 * Software Foundation, version v2.0 of the License.
 *
 * IXP Manager is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
 * more details.
 *
 * You should have received a copy of the GNU General Public License v2.0
 * along with IXP Manager.  If not, see:
 *
 * http://www.gnu.org/licenses/gpl-2.0.html
 */

use Illuminate\Foundation\Testing\WithoutMiddleware;

use Tests\TestCase;

use Grapher as GrapherService;

use IXP\Contracts\Grapher\Backend as GrapherBackendContract;

/**
 * PHPUnit test class to test the configuration generation of router configurations
 * against known good configurations for IXP\Tasks\Router\ConfigurationGenerator
 *
 * @author     Barry O'Donovan <barry@islandbridgenetworks.ie>
 * @category   Tests
 * @copyright  Copyright (C) 2009 - 2019 Internet Neutral Exchange Association Company Limited By Guarantee
 * @license    http://www.gnu.org/licenses/gpl-2.0.html GNU GPL V2.0
 */
class SmokepingTest extends TestCase
{

    public function testSmokepingConfigurationGeneration()
    {
        $grapher = GrapherService::backend( 'smokeping' );

        foreach( [ 1, 2 ] as $vlanid ) {

            foreach( [ 'ipv4', 'ipv6' ] as $proto ) {

                $options = [
                    'vlanid'   => $vlanid,
                    'protocol' => $proto,
                ];


                $config = $grapher->generateConfiguration( GrapherBackendContract::GENERATED_CONFIG_TYPE_MONOLITHIC, $options )[ 0 ];

                $knownGoodConf = file_get_contents( base_path() . "/data/travis-ci/known-good/ci-services-grapher-smokeping-vlanid{$vlanid}-{$proto}.conf" );
                $this->assertFalse( $knownGoodConf === false, "Smokeping Conf generation - could not load known good file ci-services-grapher-smokeping-vlanid{$vlanid}-{$proto}.conf" );

                // clean the configs to remove the comment lines which are irrelevent
                $config = preg_replace( "/^(#|\s+Based on configuration last generated by).*$/m", "", $config );
                $knownGoodConf = preg_replace( "/^(#|\s+Based on configuration last generated by).*$/m", "", $knownGoodConf );

                $this->assertEquals( $knownGoodConf, $config, "Known good and generated Smokeping configuration do not match for vlanid{$vlanid}-{$proto}" );

            }
        }
    }
}
