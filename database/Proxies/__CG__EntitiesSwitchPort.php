<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class SwitchPort extends \Entities\SwitchPort implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'type', 'name', 'id', 'PhysicalInterface', 'Switcher', 'ifName', 'ifAlias', 'ifHighSpeed', 'ifMtu', 'ifPhysAddress', 'ifAdminStatus', 'ifOperStatus', 'ifLastChange', 'lastSnmpPoll', 'ifIndex', 'active', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'lagIfIndex', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauType', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauState', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauAvailability', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauJacktype', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauAutoNegSupported', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauAutoNegAdminState');
        }

        return array('__isInitialized__', 'type', 'name', 'id', 'PhysicalInterface', 'Switcher', 'ifName', 'ifAlias', 'ifHighSpeed', 'ifMtu', 'ifPhysAddress', 'ifAdminStatus', 'ifOperStatus', 'ifLastChange', 'lastSnmpPoll', 'ifIndex', 'active', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'lagIfIndex', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauType', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauState', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauAvailability', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauJacktype', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauAutoNegSupported', '' . "\0" . 'Entities\\SwitchPort' . "\0" . 'mauAutoNegAdminState');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (SwitchPort $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setType($type)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', array($type));

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', array());

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPhysicalInterface(\Entities\PhysicalInterface $physicalInterface = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPhysicalInterface', array($physicalInterface));

        return parent::setPhysicalInterface($physicalInterface);
    }

    /**
     * {@inheritDoc}
     */
    public function getPhysicalInterface()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPhysicalInterface', array());

        return parent::getPhysicalInterface();
    }

    /**
     * {@inheritDoc}
     */
    public function setSwitcher(\Entities\Switcher $switcher = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSwitcher', array($switcher));

        return parent::setSwitcher($switcher);
    }

    /**
     * {@inheritDoc}
     */
    public function getSwitcher()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSwitcher', array());

        return parent::getSwitcher();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfName($ifName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfName', array($ifName));

        return parent::setIfName($ifName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfName', array());

        return parent::getIfName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfAlias($ifAlias)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfAlias', array($ifAlias));

        return parent::setIfAlias($ifAlias);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfAlias()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfAlias', array());

        return parent::getIfAlias();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfHighSpeed($ifHighSpeed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfHighSpeed', array($ifHighSpeed));

        return parent::setIfHighSpeed($ifHighSpeed);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfHighSpeed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfHighSpeed', array());

        return parent::getIfHighSpeed();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfMtu($ifMtu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfMtu', array($ifMtu));

        return parent::setIfMtu($ifMtu);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfMtu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfMtu', array());

        return parent::getIfMtu();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfPhysAddress($ifPhysAddress)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfPhysAddress', array($ifPhysAddress));

        return parent::setIfPhysAddress($ifPhysAddress);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfPhysAddress()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfPhysAddress', array());

        return parent::getIfPhysAddress();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfAdminStatus($ifAdminStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfAdminStatus', array($ifAdminStatus));

        return parent::setIfAdminStatus($ifAdminStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfAdminStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfAdminStatus', array());

        return parent::getIfAdminStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfOperStatus($ifOperStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfOperStatus', array($ifOperStatus));

        return parent::setIfOperStatus($ifOperStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfOperStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfOperStatus', array());

        return parent::getIfOperStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfLastChange($ifLastChange)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfLastChange', array($ifLastChange));

        return parent::setIfLastChange($ifLastChange);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfLastChange()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfLastChange', array());

        return parent::getIfLastChange();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastSnmpPoll($lastSnmpPoll)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastSnmpPoll', array($lastSnmpPoll));

        return parent::setLastSnmpPoll($lastSnmpPoll);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastSnmpPoll()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastSnmpPoll', array());

        return parent::getLastSnmpPoll();
    }

    /**
     * {@inheritDoc}
     */
    public function setIfIndex($ifIndex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIfIndex', array($ifIndex));

        return parent::setIfIndex($ifIndex);
    }

    /**
     * {@inheritDoc}
     */
    public function getIfIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIfIndex', array());

        return parent::getIfIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function snmpUpdate($host, $logger = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'snmpUpdate', array($host, $logger));

        return parent::snmpUpdate($host, $logger);
    }

    /**
     * {@inheritDoc}
     */
    public function ifnameToSNMPIdentifier()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'ifnameToSNMPIdentifier', array());

        return parent::ifnameToSNMPIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function setLagIfIndex($lagIfIndex)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLagIfIndex', array($lagIfIndex));

        return parent::setLagIfIndex($lagIfIndex);
    }

    /**
     * {@inheritDoc}
     */
    public function getLagIfIndex()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLagIfIndex', array());

        return parent::getLagIfIndex();
    }

    /**
     * {@inheritDoc}
     */
    public function setMauType($mauType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMauType', array($mauType));

        return parent::setMauType($mauType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMauType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMauType', array());

        return parent::getMauType();
    }

    /**
     * {@inheritDoc}
     */
    public function setMauState($mauState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMauState', array($mauState));

        return parent::setMauState($mauState);
    }

    /**
     * {@inheritDoc}
     */
    public function getMauState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMauState', array());

        return parent::getMauState();
    }

    /**
     * {@inheritDoc}
     */
    public function setMauAvailability($mauAvailability)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMauAvailability', array($mauAvailability));

        return parent::setMauAvailability($mauAvailability);
    }

    /**
     * {@inheritDoc}
     */
    public function getMauAvailability()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMauAvailability', array());

        return parent::getMauAvailability();
    }

    /**
     * {@inheritDoc}
     */
    public function setMauJacktype($mauJacktype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMauJacktype', array($mauJacktype));

        return parent::setMauJacktype($mauJacktype);
    }

    /**
     * {@inheritDoc}
     */
    public function getMauJacktype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMauJacktype', array());

        return parent::getMauJacktype();
    }

    /**
     * {@inheritDoc}
     */
    public function setMauAutoNegSupported($mauAutoNegSupported)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMauAutoNegSupported', array($mauAutoNegSupported));

        return parent::setMauAutoNegSupported($mauAutoNegSupported);
    }

    /**
     * {@inheritDoc}
     */
    public function getMauAutoNegSupported()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMauAutoNegSupported', array());

        return parent::getMauAutoNegSupported();
    }

    /**
     * {@inheritDoc}
     */
    public function setMauAutoNegAdminState($mauAutoNegAdminState)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMauAutoNegAdminState', array($mauAutoNegAdminState));

        return parent::setMauAutoNegAdminState($mauAutoNegAdminState);
    }

    /**
     * {@inheritDoc}
     */
    public function getMauAutoNegAdminState()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMauAutoNegAdminState', array());

        return parent::getMauAutoNegAdminState();
    }

}
