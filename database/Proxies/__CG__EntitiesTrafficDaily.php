<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class TrafficDaily extends \Entities\TrafficDaily implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'day', 'category', 'day_avg_in', 'day_avg_out', 'day_max_in', 'day_max_out', 'day_tot_in', 'day_tot_out', 'week_avg_in', 'week_avg_out', 'week_max_in', 'week_max_out', 'week_tot_in', 'week_tot_out', 'month_avg_in', 'month_avg_out', 'month_max_in', 'month_max_out', 'month_tot_in', 'month_tot_out', 'year_avg_in', 'year_avg_out', 'year_max_in', 'year_max_out', 'year_tot_in', 'year_tot_out', 'id', 'Customer', '' . "\0" . 'Entities\\TrafficDaily' . "\0" . 'IXP');
        }

        return array('__isInitialized__', 'day', 'category', 'day_avg_in', 'day_avg_out', 'day_max_in', 'day_max_out', 'day_tot_in', 'day_tot_out', 'week_avg_in', 'week_avg_out', 'week_max_in', 'week_max_out', 'week_tot_in', 'week_tot_out', 'month_avg_in', 'month_avg_out', 'month_max_in', 'month_max_out', 'month_tot_in', 'month_tot_out', 'year_avg_in', 'year_avg_out', 'year_max_in', 'year_max_out', 'year_tot_in', 'year_tot_out', 'id', 'Customer', '' . "\0" . 'Entities\\TrafficDaily' . "\0" . 'IXP');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (TrafficDaily $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setDay($day)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDay', array($day));

        return parent::setDay($day);
    }

    /**
     * {@inheritDoc}
     */
    public function getDay()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDay', array());

        return parent::getDay();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', array($category));

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', array());

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setDayAvgIn($dayAvgIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDayAvgIn', array($dayAvgIn));

        return parent::setDayAvgIn($dayAvgIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDayAvgIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDayAvgIn', array());

        return parent::getDayAvgIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setDayAvgOut($dayAvgOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDayAvgOut', array($dayAvgOut));

        return parent::setDayAvgOut($dayAvgOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDayAvgOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDayAvgOut', array());

        return parent::getDayAvgOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDayMaxIn($dayMaxIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDayMaxIn', array($dayMaxIn));

        return parent::setDayMaxIn($dayMaxIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDayMaxIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDayMaxIn', array());

        return parent::getDayMaxIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setDayMaxOut($dayMaxOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDayMaxOut', array($dayMaxOut));

        return parent::setDayMaxOut($dayMaxOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDayMaxOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDayMaxOut', array());

        return parent::getDayMaxOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setDayTotIn($dayTotIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDayTotIn', array($dayTotIn));

        return parent::setDayTotIn($dayTotIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getDayTotIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDayTotIn', array());

        return parent::getDayTotIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setDayTotOut($dayTotOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDayTotOut', array($dayTotOut));

        return parent::setDayTotOut($dayTotOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getDayTotOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDayTotOut', array());

        return parent::getDayTotOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeekAvgIn($weekAvgIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeekAvgIn', array($weekAvgIn));

        return parent::setWeekAvgIn($weekAvgIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeekAvgIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeekAvgIn', array());

        return parent::getWeekAvgIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeekAvgOut($weekAvgOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeekAvgOut', array($weekAvgOut));

        return parent::setWeekAvgOut($weekAvgOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeekAvgOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeekAvgOut', array());

        return parent::getWeekAvgOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeekMaxIn($weekMaxIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeekMaxIn', array($weekMaxIn));

        return parent::setWeekMaxIn($weekMaxIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeekMaxIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeekMaxIn', array());

        return parent::getWeekMaxIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeekMaxOut($weekMaxOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeekMaxOut', array($weekMaxOut));

        return parent::setWeekMaxOut($weekMaxOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeekMaxOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeekMaxOut', array());

        return parent::getWeekMaxOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeekTotIn($weekTotIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeekTotIn', array($weekTotIn));

        return parent::setWeekTotIn($weekTotIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeekTotIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeekTotIn', array());

        return parent::getWeekTotIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeekTotOut($weekTotOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeekTotOut', array($weekTotOut));

        return parent::setWeekTotOut($weekTotOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeekTotOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeekTotOut', array());

        return parent::getWeekTotOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonthAvgIn($monthAvgIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonthAvgIn', array($monthAvgIn));

        return parent::setMonthAvgIn($monthAvgIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonthAvgIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonthAvgIn', array());

        return parent::getMonthAvgIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonthAvgOut($monthAvgOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonthAvgOut', array($monthAvgOut));

        return parent::setMonthAvgOut($monthAvgOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonthAvgOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonthAvgOut', array());

        return parent::getMonthAvgOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonthMaxIn($monthMaxIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonthMaxIn', array($monthMaxIn));

        return parent::setMonthMaxIn($monthMaxIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonthMaxIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonthMaxIn', array());

        return parent::getMonthMaxIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonthMaxOut($monthMaxOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonthMaxOut', array($monthMaxOut));

        return parent::setMonthMaxOut($monthMaxOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonthMaxOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonthMaxOut', array());

        return parent::getMonthMaxOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonthTotIn($monthTotIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonthTotIn', array($monthTotIn));

        return parent::setMonthTotIn($monthTotIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonthTotIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonthTotIn', array());

        return parent::getMonthTotIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setMonthTotOut($monthTotOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMonthTotOut', array($monthTotOut));

        return parent::setMonthTotOut($monthTotOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getMonthTotOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMonthTotOut', array());

        return parent::getMonthTotOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearAvgIn($yearAvgIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearAvgIn', array($yearAvgIn));

        return parent::setYearAvgIn($yearAvgIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearAvgIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearAvgIn', array());

        return parent::getYearAvgIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearAvgOut($yearAvgOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearAvgOut', array($yearAvgOut));

        return parent::setYearAvgOut($yearAvgOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearAvgOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearAvgOut', array());

        return parent::getYearAvgOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearMaxIn($yearMaxIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearMaxIn', array($yearMaxIn));

        return parent::setYearMaxIn($yearMaxIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearMaxIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearMaxIn', array());

        return parent::getYearMaxIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearMaxOut($yearMaxOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearMaxOut', array($yearMaxOut));

        return parent::setYearMaxOut($yearMaxOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearMaxOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearMaxOut', array());

        return parent::getYearMaxOut();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearTotIn($yearTotIn)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearTotIn', array($yearTotIn));

        return parent::setYearTotIn($yearTotIn);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearTotIn()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearTotIn', array());

        return parent::getYearTotIn();
    }

    /**
     * {@inheritDoc}
     */
    public function setYearTotOut($yearTotOut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setYearTotOut', array($yearTotOut));

        return parent::setYearTotOut($yearTotOut);
    }

    /**
     * {@inheritDoc}
     */
    public function getYearTotOut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getYearTotOut', array());

        return parent::getYearTotOut();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCustomer(\Entities\Customer $customer = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCustomer', array($customer));

        return parent::setCustomer($customer);
    }

    /**
     * {@inheritDoc}
     */
    public function getCustomer()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCustomer', array());

        return parent::getCustomer();
    }

    /**
     * {@inheritDoc}
     */
    public function setIXP(\Entities\IXP $iXP = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIXP', array($iXP));

        return parent::setIXP($iXP);
    }

    /**
     * {@inheritDoc}
     */
    public function getIXP()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIXP', array());

        return parent::getIXP();
    }

}
