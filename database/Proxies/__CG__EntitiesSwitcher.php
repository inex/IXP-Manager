<?php

namespace Proxies\__CG__\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Switcher extends \Entities\Switcher implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'name', 'ipv4addr', 'ipv6addr', 'snmppasswd', 'Infrastructure', 'switchtype', 'model', 'notes', 'id', 'Ports', 'ConsoleServerConnections', 'Cabinet', 'Vendor', 'active', 'hostname', 'os', 'osDate', 'osVersion', 'lastPolled', '' . "\0" . 'Entities\\Switcher' . "\0" . 'serialNumber', '' . "\0" . 'Entities\\Switcher' . "\0" . 'mauSupported');
        }

        return array('__isInitialized__', 'name', 'ipv4addr', 'ipv6addr', 'snmppasswd', 'Infrastructure', 'switchtype', 'model', 'notes', 'id', 'Ports', 'ConsoleServerConnections', 'Cabinet', 'Vendor', 'active', 'hostname', 'os', 'osDate', 'osVersion', 'lastPolled', '' . "\0" . 'Entities\\Switcher' . "\0" . 'serialNumber', '' . "\0" . 'Entities\\Switcher' . "\0" . 'mauSupported');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Switcher $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function setName($name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', array($name));

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', array());

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpv4addr($ipv4addr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpv4addr', array($ipv4addr));

        return parent::setIpv4addr($ipv4addr);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpv4addr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpv4addr', array());

        return parent::getIpv4addr();
    }

    /**
     * {@inheritDoc}
     */
    public function setIpv6addr($ipv6addr)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIpv6addr', array($ipv6addr));

        return parent::setIpv6addr($ipv6addr);
    }

    /**
     * {@inheritDoc}
     */
    public function getIpv6addr()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIpv6addr', array());

        return parent::getIpv6addr();
    }

    /**
     * {@inheritDoc}
     */
    public function setSnmppasswd($snmppasswd)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSnmppasswd', array($snmppasswd));

        return parent::setSnmppasswd($snmppasswd);
    }

    /**
     * {@inheritDoc}
     */
    public function getSnmppasswd()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSnmppasswd', array());

        return parent::getSnmppasswd();
    }

    /**
     * {@inheritDoc}
     */
    public function setInfrastructure($infrastructure)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInfrastructure', array($infrastructure));

        return parent::setInfrastructure($infrastructure);
    }

    /**
     * {@inheritDoc}
     */
    public function getInfrastructure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInfrastructure', array());

        return parent::getInfrastructure();
    }

    /**
     * {@inheritDoc}
     */
    public function setSwitchtype($switchtype)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSwitchtype', array($switchtype));

        return parent::setSwitchtype($switchtype);
    }

    /**
     * {@inheritDoc}
     */
    public function getSwitchtype()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSwitchtype', array());

        return parent::getSwitchtype();
    }

    /**
     * {@inheritDoc}
     */
    public function setModel($model)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModel', array($model));

        return parent::setModel($model);
    }

    /**
     * {@inheritDoc}
     */
    public function getModel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModel', array());

        return parent::getModel();
    }

    /**
     * {@inheritDoc}
     */
    public function setNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNotes', array($notes));

        return parent::setNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotes', array());

        return parent::getNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function addPort(\Entities\SwitchPort $ports)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPort', array($ports));

        return parent::addPort($ports);
    }

    /**
     * {@inheritDoc}
     */
    public function removePort(\Entities\SwitchPort $ports)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePort', array($ports));

        return parent::removePort($ports);
    }

    /**
     * {@inheritDoc}
     */
    public function getPorts()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPorts', array());

        return parent::getPorts();
    }

    /**
     * {@inheritDoc}
     */
    public function addConsoleServerConnection(\Entities\ConsoleServerConnection $consoleServerConnections)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addConsoleServerConnection', array($consoleServerConnections));

        return parent::addConsoleServerConnection($consoleServerConnections);
    }

    /**
     * {@inheritDoc}
     */
    public function removeConsoleServerConnection(\Entities\ConsoleServerConnection $consoleServerConnections)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeConsoleServerConnection', array($consoleServerConnections));

        return parent::removeConsoleServerConnection($consoleServerConnections);
    }

    /**
     * {@inheritDoc}
     */
    public function getConsoleServerConnections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getConsoleServerConnections', array());

        return parent::getConsoleServerConnections();
    }

    /**
     * {@inheritDoc}
     */
    public function setCabinet(\Entities\Cabinet $cabinet = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCabinet', array($cabinet));

        return parent::setCabinet($cabinet);
    }

    /**
     * {@inheritDoc}
     */
    public function getCabinet()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCabinet', array());

        return parent::getCabinet();
    }

    /**
     * {@inheritDoc}
     */
    public function setVendor(\Entities\Vendor $vendor = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVendor', array($vendor));

        return parent::setVendor($vendor);
    }

    /**
     * {@inheritDoc}
     */
    public function getVendor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVendor', array());

        return parent::getVendor();
    }

    /**
     * {@inheritDoc}
     */
    public function setActive($active)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActive', array($active));

        return parent::setActive($active);
    }

    /**
     * {@inheritDoc}
     */
    public function getActive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActive', array());

        return parent::getActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setHostname($hostname)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHostname', array($hostname));

        return parent::setHostname($hostname);
    }

    /**
     * {@inheritDoc}
     */
    public function getHostname()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHostname', array());

        return parent::getHostname();
    }

    /**
     * {@inheritDoc}
     */
    public function setOs($os)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOs', array($os));

        return parent::setOs($os);
    }

    /**
     * {@inheritDoc}
     */
    public function getOs()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOs', array());

        return parent::getOs();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsDate($osDate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsDate', array($osDate));

        return parent::setOsDate($osDate);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsDate', array());

        return parent::getOsDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setOsVersion($osVersion)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOsVersion', array($osVersion));

        return parent::setOsVersion($osVersion);
    }

    /**
     * {@inheritDoc}
     */
    public function getOsVersion()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOsVersion', array());

        return parent::getOsVersion();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastPolled($lastPolled)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastPolled', array($lastPolled));

        return parent::setLastPolled($lastPolled);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastPolled()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastPolled', array());

        return parent::getLastPolled();
    }

    /**
     * {@inheritDoc}
     */
    public function snmpPoll($host, $logger = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'snmpPoll', array($host, $logger));

        return parent::snmpPoll($host, $logger);
    }

    /**
     * {@inheritDoc}
     */
    public function snmpPollSwitchPorts($host, $logger = false, &$result = false)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'snmpPollSwitchPorts', array($host, $logger, $result));

        return parent::snmpPollSwitchPorts($host, $logger, $result);
    }

    /**
     * {@inheritDoc}
     */
    public function setSerialNumber($serialNumber)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSerialNumber', array($serialNumber));

        return parent::setSerialNumber($serialNumber);
    }

    /**
     * {@inheritDoc}
     */
    public function getSerialNumber()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSerialNumber', array());

        return parent::getSerialNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setMauSupported($mauSupported)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMauSupported', array($mauSupported));

        return parent::setMauSupported($mauSupported);
    }

    /**
     * {@inheritDoc}
     */
    public function getMauSupported()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMauSupported', array());

        return parent::getMauSupported();
    }

}
