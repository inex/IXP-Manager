#
# Bird AS112 configuration generated by IXP Manager
#
# Do not edit this file, it will be overwritten.
#
# Generated: 2025-08-30 11:55:51
#

# For VLAN: Peering LAN 1 (Tag: 1, Database ID: 1)

# standardise time formats:
timeformat base         iso long;
timeformat log          iso long;
timeformat protocol     iso long;
timeformat route        iso long;


log "/var/log/bird/b2-as112-lan1-ipv6.log" all;
log syslog name "bird-b2-as112-lan1-ipv6" all;

define routerasn     = 112;
define routeraddress = 2001:db8:0:0:2::6;

router id 192.0.2.6;

protocol kernel {
    ipv6 {
        export all;
    };
    scan time 120;
    netlink rx buffer 1703936;
}

protocol device {
    scan time 10;
}

# These function excludes weird networks
#  rfc1918, class D, class E, too long and too short prefixes
function avoid_martians() -> bool
prefix set martians;
{
    
    martians = [
        ::/0,                   # Default (can be advertised as a route in BGP to peers if desired)
        ::/96,                  # IPv4-compatible IPv6 address - deprecated by RFC4291
        ::/128,                 # Unspecified address
        ::1/128,                # Local host loopback address
        ::ffff:0.0.0.0/96+,     # IPv4-mapped addresses
        ::224.0.0.0/100+,       # Compatible address (IPv4 format)
        ::127.0.0.0/104+,       # Compatible address (IPv4 format)
        ::0.0.0.0/104+,         # Compatible address (IPv4 format)
        ::255.0.0.0/104+,       # Compatible address (IPv4 format)
        0000::/8+,              # Pool used for unspecified, loopback and embedded IPv4 addresses
        0200::/7+,              # OSI NSAP-mapped prefix set (RFC4548) - deprecated by RFC4048
        3ffe::/16+,             # Former 6bone, now decommissioned
        2001:db8::/32+,         # Reserved by IANA for special purposes and documentation
        2002:e000::/20+,        # Invalid 6to4 packets (IPv4 multicast)
        2002:7f00::/24+,        # Invalid 6to4 packets (IPv4 loopback)
        2002:0000::/24+,        # Invalid 6to4 packets (IPv4 default)
        2002:ff00::/24+,        # Invalid 6to4 packets
        2002:0a00::/24+,        # Invalid 6to4 packets (IPv4 private 10.0.0.0/8 network)
        2002:ac10::/28+,        # Invalid 6to4 packets (IPv4 private 172.16.0.0/12 network)
        2002:c0a8::/32+,        # Invalid 6to4 packets (IPv4 private 192.168.0.0/16 network)
        fc00::/7+,              # Unicast Unique Local Addresses (ULA) - RFC 4193
        fe80::/10+,             # Link-local Unicast
        fec0::/10+,             # Site-local Unicast - deprecated by RFC 3879 (replaced by ULA)
        ff00::/8+,              # Multicast
        ::/0{49,128}            # Filter small prefixes
    ];

    
    # Avoid RFC1918 and similar networks
    if ( net ~ martians ) then {
        return false;
    }

    return true;
}


# This protocol defines the routes we want to export for AS112

protocol static static_as112 {


    ipv6;
    route 2620:4f:8000::/48 blackhole;
    route 2001:4:112::/48 blackhole;


}

##
## AS112 client configuration
##



########################################################################################
########################################################################################
#
# RPKI protocol configuration
#
########################################################################################
########################################################################################


roa6 table t_roa;

protocol rpki rpki1 {

    roa6 { table t_roa; };

    remote "10.39.5.123" port 3323;
    min version 1;
    max version 2;

    retry keep 90;
    refresh keep 900;
    expire keep 172800;
}

    
protocol rpki rpki2 {

    roa6 { table t_roa; };

    remote "10.39.5.124" port 3323;
    min version 0;

    retry keep 90;
    refresh keep 900;
    expire keep 172800;
}

    



function fn_import ( int remote_as ) -> bool
{
    if !(avoid_martians()) then {
        return false;
    }

    # Belt and braces: must have at least one ASN in the path
    if( bgp_path.len < 1 ) then {
        return false;
    }

    # Belt and braces: no one needs an ASN path with > 64 hops, that's just broken
    if( bgp_path.len > 64 ) then {
        return false;
    }

    
    # RPKI check - deny invalids
    if( roa_check( t_roa, net, bgp_path.last_nonaggregated ) = ROA_INVALID ) then {
        print "Ignore RPKI invalid ", net, " for ASN ", bgp_path.last_nonaggregated;
        return false;
    }

    
    return true;
}


protocol bgp pb_as1213_vli1_ipv6 {
        description "AS1213 - HEAnet";
        local as routerasn;
        source address routeraddress;
        neighbor 2001:db8:1::10 as 1213;
        strict bind yes;
        enforce first as on;
        ipv6 {
            import where fn_import( 1213 );
            import limit 200 action restart;
            export where proto = "static_as112";
        };
        
}


protocol bgp pb_as65501_vli9_ipv6 {
        description "AS65501 - SCIX Route Servers";
        local as routerasn;
        source address routeraddress;
        neighbor 2001:db8:1::8 as 65501;
        strict bind yes;
        enforce first as off;
        ipv6 {
            # peer is route server at own IXP => prefixes already validated by route server
            import all;
            export where proto = "static_as112";
        };
        
}


