{*
    GoBGP Route Server Configuration Templates

    Please see: https://github.com/inex/IXP-Manager/wiki/Route-Server

    You should not need to edit these files - instead use your own custom skins. If
    you can not effect the changes you need with skinning, consider posting to the mailing
    list to see if it can be achieved / incorporated.

    Skinning: https://github.com/inex/IXP-Manager/wiki/Skinning

    GoBGP configuration template from Shu Sugimoto <shu@su.gimo.to> @JPNAP/INTERNET MULTIFEED CO.
*}

##
## neighbor
## AS{$int.autsys} - {$int.cname} - VLAN Interface {$int.vliid}
##

[[neighbors]]
  [neighbors.config]
    description = "AS{$int.autsys} - {$int.cname} - VLAN Interface {$int.vliid}"
    neighbor-address = "{$int.address}"
    peer-as = {$int.autsys}
{if $int.bgpmd5secret}
    auth-password = "{$int.bgpmd5secret}"
{/if}
  [neighbors.timers.config]
    hold-time = 90
    keepalive-interval = 30
  [neighbors.transport.config]
    passive-mode = true
  [neighbors.route-server.config]
    route-server-client = true
  [[neighbors.afi-safis]]
    [neighbors.afi-safis.config]
{if $proto eq 4}
      afi-safi-name = "ipv4-unicast"
{else}
      afi-safi-name = "ipv6-unicast"
{/if}
    [neighbors.afi-safis.prefix-limit.config]
      max-prefixes = {$int.maxprefixes}
  [neighbors.apply-policy.config]
    in-policy-list = [
      "f_martians",
{if $int['irrdbfilter']}
      "f_in_as{$int.autsys}",
{else}
      "f_accept",
{/if}
    ]
    default-in-policy = "reject-route"
    import-policy-list = ["f_import_as{$int.autsys}"]
    default-import-policy = "accept-route"
    export-policy-list = []
    default-export-policy = "accept-route"

{if not in_array( $int.autsys, $asnsProcessed )}
[[policy-definitions]]
  name = "f_in_as{$int.autsys}"
  [[policy-definitions.statements]]
    [policy-definitions.statements.conditions.match-prefix-set]
      prefix-set = "prefix_irrdb_as{$int.autsys}"
    [policy-definitions.statements.conditions.bgp-conditions.match-as-path-set]
      as-path-set = "origin_irrdb_as{$int.autsys}"
    [policy-definitions.statements.actions.route-disposition]
      accept-route = true

[[policy-definitions]]
  name = "f_import_as{$int.autsys}"
  [[policy-definitions.statements]]
    [policy-definitions.statements.conditions.bgp-conditions.match-community-set]
      community-set = "do_not_advertise_to_as{$int.autsys}"
    [policy-definitions.statements.actions.route-disposition]
      accept-route = false
  [[policy-definitions.statements]]
    [policy-definitions.statements.conditions.bgp-conditions.match-community-set]
      community-set = "advertise_to_as{$int.autsys}"
    [policy-definitions.statements.actions.route-disposition]
      accept-route = true
  [[policy-definitions.statements]]
    [policy-definitions.statements.conditions.bgp-conditions.match-community-set]
      community-set = "do_not_advertise_to_all"
    [policy-definitions.statements.actions.route-disposition]
      accept-route = false

[[defined-sets.prefix-sets]]
  prefix-set-name = "prefix_irrdb_as{$int.autsys}"
{foreach $prefixes as $p}
  [[defined-sets.prefix-sets.prefix-list]]
    ip-prefix = "{$p.prefix}"
{/foreach}

[[defined-sets.bgp-defined-sets.as-path-sets]]
  as-path-set-name = "origin_irrdb_as{$int.autsys}"
  as-path-list = [
{foreach $irrdbAsns as $a}
    "_{$a.asn}$",
{/foreach}
  ]

[[defined-sets.bgp-defined-sets.community-sets]]
  community-set-name = "advertise_to_as{$int.autsys}"
  community-list = ["{#rsconfASN#}:{$int.autsys}"]

[[defined-sets.bgp-defined-sets.community-sets]]
  community-set-name = "do_not_advertise_to_as{$int.autsys}"
  community-list = ["0:{$int.autsys}"]

[[defined-sets.bgp-defined-sets.as-path-sets]]
  as-path-set-name = "as{$int.autsys}"
  as-path-list = [ "^{$int.autsys}_" ]
{/if}
